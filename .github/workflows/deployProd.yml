name: Deploy Prod Pipeline

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm run build

      - name: Archive build files
        run: tar -czf build.tar.gz ./.output

      - name: Upload build files
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: build.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build files
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: ./build

      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved

      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@v2"
        with:
          config_file: .github/workflows/sitst-client.ovpn
          username: ${{ secrets.VPN_USERNAME }}
          password: ${{ secrets.VPN_PASSWORD }}

      - name: Setup SSH agent and add private key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | sed 's/\\n/\n/g' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan -p 22 ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Copy build files to VM
        run: |
          sshpass -p "${{ secrets.REMOTE_PASSWORD }}" scp -P 22 build/build.tar.gz ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/home/sysadmin/classCraftWeb

      

      - name: Deploy Docker container on VM
        env:
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PASSWORD: ${{ secrets.REMOTE_PASSWORD }}
        run: |
          sshpass -p "$REMOTE_PASSWORD" ssh -t -o StrictHostKeyChecking=no -p 22 $REMOTE_USER@$REMOTE_HOST << 'EOF'
            cd /home/sysadmin/classCraftWeb
            tar -xzf build.tar.gz
            cd ..
            docker compose -p classcraft-qa -f compose.prod.yaml stop web || true
            docker compose -p classcraft-prod -f compose.prod.yaml up -d --build web
          EOF

